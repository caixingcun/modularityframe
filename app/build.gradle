import java.security.InvalidKeyException
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.example.modularitylearn"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                output -> outputFileName = new File("modularity" + "_" + buildType.name + ".apk")
            }
    }
    signingConfigs {

        release {
            try {
                storeFile file("test.jks")
                storePassword properties.getProperty("release_keystore_pass")
                keyAlias properties.getProperty("release_key_alias")
                keyPassword properties.getProperty("release_key_pass")
            }
            catch (ex) {
                throw new InvalidKeyException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }
        debug {
            try {
                storeFile file("test.jks")
                storePassword properties.getProperty("debug_keystore_pass")
                keyAlias properties.getProperty("debug_key_alias")
                keyPassword properties.getProperty("debug_key_pass")
            }
            catch (ex) {
                throw new InvalidKeyException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }

    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            debuggable false
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["androidx_ext_junit"]
    androidTestImplementation rootProject.ext.dependencies["espresso"]
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["constraintlayout"]

    implementation rootProject.ext.dependencies["arouter-api"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    implementation project(':commonlib')

    if (homeModule.toBoolean()) {
        implementation project(':home')
    }
    if (chatModule.toBoolean()) {
        implementation project(':chat')
    }
    if (categoryModule.toBoolean()) {
        implementation project(':category')
    }
    if (mineModule.toBoolean()) {
        implementation project(':mine')
    }

}
